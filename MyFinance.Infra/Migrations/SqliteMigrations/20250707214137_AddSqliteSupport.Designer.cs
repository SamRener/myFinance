// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyFinance.Infra;

#nullable disable

namespace MyFinance.Infra.Migrations.SqliteMigrations
{
    [DbContext(typeof(SqliteMyFinanceContext))]
    [Migration("20250707214137_AddSqliteSupport")]
    partial class AddSqliteSupport
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("MyFinance.Infra.ChartOfAccountEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<char>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ChartOfAccounts");
                });

            modelBuilder.Entity("MyFinance.Infra.TransactionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Amount")
                        .HasColumnType("REAL");

                    b.Property<int>("ChartOfAccountId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("History")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChartOfAccountId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("MyFinance.Infra.TransactionEntity", b =>
                {
                    b.HasOne("MyFinance.Infra.ChartOfAccountEntity", "ChartOfAccount")
                        .WithMany()
                        .HasForeignKey("ChartOfAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChartOfAccount");
                });
#pragma warning restore 612, 618
        }
    }
}
